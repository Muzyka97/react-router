{"version":3,"file":"static/js/7.c5368089.chunk.js","mappings":"iMAAaA,EAAY,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,SAC9B,OACI,0BACI,kBACAC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,KAItB,E,kBC6BD,EAjCkB,WAAO,IAAD,EACdK,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAeC,KAAKR,EACvB,GAAC,IAEF,IAIMS,GAAmBC,EAAAA,EAAAA,UAAQ,WAC7B,OAAOX,EAAUY,QAAO,SAAAC,GAAQ,OAChCA,EAASC,KAAKC,cAAcC,SAASX,EAAYU,cADjB,GAGnC,GAAC,CAACf,EAAWK,IAEd,OAAO,6BACH,SAACd,EAAD,CAAWC,MAAOa,EAAaZ,SAXd,SAAAD,GACjBY,EAAyB,KAAVZ,EAAe,CAACoB,OAAQpB,GAAQ,CAAC,EACnD,IAUIkB,EAAiBO,OAAS,IACvB,wBACKP,EAAiBQ,KAAI,SAAAL,GAAQ,OAC9B,yBACI,SAAC,KAAD,CAAMM,GAAE,UAAKN,EAASO,IAAMC,MAAO,CAAEC,KAAMzB,GAA3C,SAAwDgB,EAASC,QAD5DD,EAASO,GADY,QAQ7C,C","sources":["components/SearchBox.js","pages/Customers.js"],"sourcesContent":["export const SearchBox = ({value, onChange}) =>{\n    return(\n        <div>\n            <input \n            type='text' \n            value={value}\n            onChange={e => onChange(e.target.value)}\n            />\n        </div>\n    )\n};","import { getCustomers } from 'fakeAPI';\nimport { useEffect, useMemo, useState } from 'react';\nimport { SearchBox } from '../components/SearchBox';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\n\nconst Customers = () => {\n    const location = useLocation();\n    const [customers, setCustomers] = useState([]);\n    const [searchParams, setSearchParam] = useSearchParams();\n    const filterParam = searchParams.get('filter') ?? \"\";\n\n    useEffect(() =>{\n        getCustomers().then(setCustomers);\n    },[]);\n\n    const changeFilter = value => {\n        setSearchParam(value !== '' ? {filter: value}: {})\n    };\n\n    const visibleCustomers = useMemo(()=>{\n        return customers.filter(customer => \n        customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    )\n    },[customers, filterParam])\n    \n    return <main>\n        <SearchBox value={filterParam} onChange={changeFilter}/>\n        {visibleCustomers.length > 0 && (\n            <ul>\n                {visibleCustomers.map(customer => (\n                <li key={customer.id}>\n                    <Link to={`${customer.id}`} state={{ from: location }}>{customer.name}</Link>\n                </li>\n                ))}\n            </ul>\n        )}\n    </main>;\n};\nexport default Customers;"],"names":["SearchBox","value","onChange","type","e","target","location","useLocation","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParam","filterParam","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","length","map","to","id","state","from"],"sourceRoot":""}